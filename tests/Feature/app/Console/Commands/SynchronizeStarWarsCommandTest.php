<?php declare(strict_types=1);
/**
 * Created by PhpStorm.
 * User: Lukasz
 */

namespace Tests\Feature\app\Console\Commands;


use App\Models\Film;
use App\Models\People;
use App\Models\Planet;
use App\Models\Species;
use App\Models\Starship;
use App\Models\Vehicle;
use GuzzleHttp\Handler\MockHandler;
use GuzzleHttp\HandlerStack;
use GuzzleHttp\Psr7\Response;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Artisan;
use Tests\TestCase;
use Tests\Unit\app\Logic\StarWars\ClientServiceProvider;
use Tests\Unit\app\Logic\StarWars\DataMap;

class SynchronizeStarWarsCommandTest extends TestCase
{
    use RefreshDatabase, ClientServiceProvider;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $mock = new MockHandler([
            new Response(200, [], DataMap::getPeoplePage1()),
            new Response(200, [], DataMap::getFilmsItem()),
            new Response(200, [], DataMap::getFilmsItem()),

            new Response(200, [], DataMap::getSpeciesItem()),

            new Response(200, [], DataMap::getStarshipsItem()),
            new Response(200, [], DataMap::getStarshipsItem()),

            new Response(200, [], DataMap::getPlanetsItem()),
        ]);

        $handler = HandlerStack::create($mock);

        $this->initClient($handler);
    }

    /** @test */
    public function handle()
    {
        Artisan::call('command:star_wars:people_with_relations', [
            'qty' => 1
        ]);

        $this->assertSame(1, People::query()->count());
        $this->assertSame(1, Film::query()->count());
        $this->assertSame(1, Species::query()->count());
        $this->assertSame(0, Vehicle::query()->count());
        $this->assertSame(1, Starship::query()->count());
        $this->assertSame(1, Planet::query()->count());

        /** @var People $people */
        $people = People::query()->findOrFail(1);

        $this->assertNotNull($people->homeworld);
        $this->assertSame(1, $people->films()->count());
        $this->assertSame(0, $people->vehicles()->count());
        $this->assertSame(1, $people->starships()->count());
        $this->assertSame(1, $people->species()->count());
    }
}