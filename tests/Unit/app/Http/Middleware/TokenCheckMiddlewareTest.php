<?php declare(strict_types=1);
/**
 * Created by PhpStorm.
 * User: Lukasz
 */

namespace Tests\Unit\app\Http\Middleware;


use App\Exceptions\TokenException;
use App\Http\Middleware\TokenCheckMiddleware;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Config;
use Tests\TestCase;

class TokenCheckMiddlewareTest extends TestCase
{
    use RefreshDatabase;

    /** @var User */
    private $user;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $users = factory(User::class, 3)->create();
        $this->user = $users->first();
    }


    /** @test */
    public function request_header_has_not_token()
    {
        $request = new Request;

        $middleware = new TokenCheckMiddleware();

        $this->expectException(TokenException::class);

        $middleware->handle($request, function ($req) {});
    }

    /** @test */
    public function request_header_has_wrong_token()
    {
        $request = new Request;
        $request->headers->set('Token-Own', 'test');
        $middleware = new TokenCheckMiddleware();

        $this->expectException(TokenException::class);

        $middleware->handle($request, function ($req) {});
    }

    /** @test */
    public function request_header_has_good_token()
    {
        $request = new Request;
        $request->headers->set('Token-Own', $this->user->api_token);
        $middleware = new TokenCheckMiddleware();

        $response = $middleware->handle($request, function ($req) {});

        $this->assertNull($response);
    }
}